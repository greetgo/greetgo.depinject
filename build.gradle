buildscript {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }
  dependencies {
    classpath "kz.greetgo.plugins:greetgo.gradle.plugins:0.0.5"
  }
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'maven'
  apply plugin: 'signing'

  version = rootProject.file('greetgo.depinject/src_resources/depinject_version.txt').text.trim()

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.depinject"
}

subprojects {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO') }
    mavenCentral()
  }

  dependencies {
    //ext.jettyVersion = '8.0+'
    ext.jettyVersion = '9.2+'
    ext.springVersion = '4.2.3.RELEASE'
    ext.gwtVersion = '2.8.0'
    ext.greetgoUtilVersion = '0.0.27'
    ext.testNgVersion = '6.14.3'
    ext.classScannerVersion = '2.0.0'
    ext.greetgoJavaCompilerVersion = "2.0.0"

    //compile 'com.google.code.findbugs:annotations:2.0.1'

    testCompile "org.testng:testng:$testNgVersion"
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
  }

  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
  }

  test.useTestNG()

  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name
      attributes 'Implementation-Version': version
      attributes 'Implementation-Vendor': "greetgo!"
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
    }
  }
}
