//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.MavenUploadPlugin
//noinspection UnnecessaryQualifiedReference
apply plugin: kz.greetgo.gradle.plugins.GgRepoUploadPlugin

dependencies {
  compile project(':greetgo.depinject')
  compile project(':greetgo.depinject.gen')

  compile "com.google.gwt:gwt-user:${gwtVersion}"
  compile "com.google.gwt:gwt-dev:${gwtVersion}"
  compile 'com.metapossum:metapossum-scanner:1.0.1'

}

task packageSources(type: Jar) {
  from sourceSets.main.allJava
  classifier = 'sources'
}

jar {
  from sourceSets.main.allSource
}

uploadToMavenCentral {
  description = "Depinject for GWT"
  url = 'https://github.com/greetgo/greetgo.depinject'
  scm.url = 'https://github.com/greetgo/greetgo.depinject.git'
  developer {
    id = 'pompei'
    name = 'Evgeniy Kolpakov'
    email = 'ekolpakov@greet-go.com'
  }
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
  options.addStringOption("sourcepath", "${buildDir}/unpacked/dev-gwt-jar")
}

def findGwtDevJar() {
  for (File f : sourceSets.main.runtimeClasspath) {
    if (f.getName().startsWith("gwt-dev-") && f.getName().endsWith(".jar")) {
      return f
    }
  }

  throw new RuntimeException("No gwt-dev.jar in sourceSets.main.runtimeClasspath of " + project)
}

task prepareGwtSourcePath(type: Copy) {
  from zipTree(findGwtDevJar())
  into file("${buildDir}/unpacked/dev-gwt-jar")
}

javadoc.dependsOn prepareGwtSourcePath
