def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'maven'

  version = '1.1.4'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.depinject"

  eclipse.project.natures 'org.springsource.ide.eclipse.gradle.core.nature'
  compileJava.options.debugOptions.debugLevel = "source,lines,vars"
  compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"
}

subprojects {
  repositories {
    mavenLocal()
    if (System.getenv('GG_REPO') != null && System.getenv('GG_REPO').length() > 0) {
      maven { url System.getenv('GG_REPO') }
    }
    mavenCentral()
  }

  dependencies {
    //ext.jettyVersion = '8.0+'
    ext.jettyVersion = '9.2+'
    ext.springVersion = '4.2.3.RELEASE'
    ext.gwtVersion = '2.7.0'
    ext.greetgoUtilVersion = '0.0.25'
    ext.testNgVersion = '6.5.1'
    ext.classScannerVersion = '0.0.1'
    ext.greetgoJavaCompilerVersion = "0.0.3"

    //compile 'com.google.code.findbugs:annotations:2.0.1'

    testCompile "org.testng:testng:${testNgVersion}"
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
  }

  compileJava {
    options.encoding = "UTF-8"
  }
  compileTestJava {
    options.encoding = "UTF-8"
  }

  project.eclipse.classpath.file.whenMerged { cp ->
    if (project.hasProperty("sourceCompatibility")) {
      cp.entries.findAll { it.path.contains('JRE_CONTAINER') }.each {

        it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/" +
            "JavaSE-$project.sourceCompatibility"
      }
    }
  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name,
          'Implementation-Version': version, 'Implementation-Vendor': vendorName,
          'Built-By': System.getProperty("user.name"), 'Built-At': nowFormattedDate
    }
  }

  sourceSets {
    main {
      java.srcDirs = ["src"]
      resources.srcDirs = ["src", "src_resources"]
    }
    test {
      java.srcDirs = ["test_src"]
      resources.srcDirs = ["test_src", "test_src_resources"]
    }
  }

  test { useTestNG() }
}
